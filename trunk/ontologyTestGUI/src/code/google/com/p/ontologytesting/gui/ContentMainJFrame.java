/*
 * ContentMainJFrame.java
 *
 * Created on 25 de junio de 2008, 1:27
 */

package code.google.com.p.ontologytesting.gui;

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.util.ArrayList;
import javax.swing.JFrame;
import code.google.com.p.ontologytesting.model.Instancias;
import java.awt.BorderLayout;

/**
 *
 * @author  sara.garcia
 */
public class ContentMainJFrame extends javax.swing.JFrame {

    public static ArrayList getPaginas() {
        return paginas;
    }
    public static void setPaginas(ArrayList aPaginas) {
        paginas = aPaginas;
    }
    public static int getActual() {
        return actual;
    }
    public static void setActual(int aActual) {
        actual = aActual;
    }
    private static boolean heVueltoGroupTest=false,heVueltoSparql=false;
    private static ArrayList<Instancias> instancias = new ArrayList<Instancias>();
    public static boolean isHeVueltoGroupTest() {
        return heVueltoGroupTest;
    }
    public static void setHeVueltoGroupTest(boolean aHeVueltoGroupTest) {
        heVueltoGroupTest = aHeVueltoGroupTest;
    }
    public static boolean isHeVueltoSparql() {
        return heVueltoSparql;
    }
    public static void setHeVueltoSparql(boolean aHeVueltoSparql) {
        heVueltoSparql = aHeVueltoSparql;
    }
    private static MainJPanel mainPanel;
    private static GroupTestsJPanel groupTests;
    public static ArrayList<Instancias> getInstancias() {
        return instancias;
    }
    public static void setInstancias(int index,Instancias aInstancias) {
        instancias.set(index, aInstancias);
    }

    public static MainJPanel getMainPanel() {
        return mainPanel;
    }

    public static javax.swing.JSeparator getSeparador() {
        return separador;
    }

    public static javax.swing.JPanel getSeparadorPanel() {
        return separadorPanel;
    }
    private JFrame frame;
    private AddInstancesClasPropJDialog addInstances = new AddInstancesClasPropJDialog(frame,true,8,0);
    private AddSPARQLJPanel sparql;
    private ConfigurationJPanel configurar;
    private static ArrayList paginas = new ArrayList();
    private static int actual=0;
    private static boolean botonAnte=false;
    
    /** Creates new form ContentMainJFrame */
    public ContentMainJFrame() {
        initComponents();
        getSeparadorPanel().setLayout(new BorderLayout());
        getSeparador().setVisible(false);
        mainPanel = new MainJPanel();
        groupTests = new GroupTestsJPanel(8);
        this.setGroupTests(groupTests);
        for (int i = 0; i <= 5; i++) {
            instancias.add(new Instancias());
        }
        contentPanel.setLayout(new FlowLayout(FlowLayout.LEFT));
        this.setTitle("EVALUADOR DE ONTOLOGÍAS");
        this.setSize(new Dimension(980,720));
    contentPanel.add(mainPanel);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPanel = new javax.swing.JPanel();
        separador = new javax.swing.JSeparator();
        separadorPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
        contentPanel.setLayout(contentPanelLayout);
        contentPanelLayout.setHorizontalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 951, Short.MAX_VALUE)
        );
        contentPanelLayout.setVerticalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 536, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout separadorPanelLayout = new javax.swing.GroupLayout(separadorPanel);
        separadorPanel.setLayout(separadorPanelLayout);
        separadorPanelLayout.setHorizontalGroup(
            separadorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 951, Short.MAX_VALUE)
        );
        separadorPanelLayout.setVerticalGroup(
            separadorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 114, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(separador, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 951, Short.MAX_VALUE)
            .addComponent(separadorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(contentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separador, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(separadorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ContentMainJFrame().setVisible(true);
            }
        });    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JPanel contentPanel;
    private static javax.swing.JSeparator separador;
    private static javax.swing.JPanel separadorPanel;
    // End of variables declaration//GEN-END:variables

    public GroupTestsJPanel getGroupTests() {
        return groupTests;
    }

    public void setGroupTests(GroupTestsJPanel groupTests) {
        ContentMainJFrame.groupTests = groupTests;
    }

    public static boolean getBotonAnte() {
        return botonAnte;
    }
    public static void setBotonAnte(boolean abotonAnte) {
        botonAnte = abotonAnte;
    }

    public static javax.swing.JPanel getContentPanel() {
        return contentPanel;
    }
    
    public ContentMainJFrame getContentMainJFrame(){
        return this;
    }
    /*for(int i=1; i<panelAyudaInst.getComponentCount();i++){
                    TestInstancesTFJPanel test = (TestInstancesTFJPanel) panelAyudaInst.getComponent(i);
                    test.getQueryTextField().setForeground(Color.BLACK);
                }
                for(int i=1; i<panelAyudaRet.getComponentCount();i++){
                    TestInstancesTextAreaJPanel test = (TestInstancesTextAreaJPanel) panelAyudaRet.getComponent(i);
                    test.getQueryTextField().setForeground(Color.BLACK);
                    test.getResultTextArea().setForeground(Color.BLACK); 
                }
                for(int i=1; i<panelAyudaReal.getComponentCount();i++){
                    TestInstancesQueryJPanel test = (TestInstancesQueryJPanel) panelAyudaReal.getComponent(i);
                    test.getQueryTextField().setForeground(Color.BLACK);
                    test.getResultTextField().setForeground(Color.BLACK);
                }
                for(int i=1; i<panelAyudaSat.getComponentCount();i++){
                    TestInstancesTFJPanel test = (TestInstancesTFJPanel) panelAyudaSat.getComponent(i);
                    test.getQueryTextField().setForeground(Color.BLACK);
                }
                for(int i=1; i<panelAyudaClas.getComponentCount();i++){
                    TestInstancesTextAreaJPanel test = (TestInstancesTextAreaJPanel) panelAyudaClas.getComponent(i);
                    test.getQueryTextField().setForeground(Color.BLACK);
                    test.getResultTextArea().setForeground(Color.BLACK);
                }*/
}

