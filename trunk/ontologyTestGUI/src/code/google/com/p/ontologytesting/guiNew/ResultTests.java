/*
 * ResultTests.java
 *
 * Created on 12 de septiembre de 2008, 21:19
 */

package code.google.com.p.ontologytesting.guiNew;

import code.google.com.p.ontologytesting.model.OntologyTestCase;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author  saruskas
 */
public class ResultTests extends javax.swing.JFrame {

    /** Creates new form ResultTests */
    public ResultTests() {
        initComponents();
        this.setSize(new Dimension(870,700));
        this.setTitle("Resultado de los Tests");
        getContentPanelResults().setLayout(new BorderLayout());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPanelResults = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout contentPanelResultsLayout = new javax.swing.GroupLayout(contentPanelResults);
        contentPanelResults.setLayout(contentPanelResultsLayout);
        contentPanelResultsLayout.setHorizontalGroup(
            contentPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 793, Short.MAX_VALUE)
        );
        contentPanelResultsLayout.setVerticalGroup(
            contentPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 499, Short.MAX_VALUE)
        );

        fileMenu.setText("Resultados");

        saveMenuItem.setText("Guardar");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setText("Guardar como");
        saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPanelResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentPanelResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_exitMenuItemActionPerformed

private void saveAsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuItemActionPerformed
// TODO add your handling code here:
    String resultado = OntologyTestCase.getMuestra();//GEN-LAST:event_saveAsMenuItemActionPerformed
    JFileChooser fileChooser = new JFileChooser();
    int seleccion = fileChooser.showSaveDialog(this);
    if(seleccion == JFileChooser.APPROVE_OPTION){
        File fichero = fileChooser.getSelectedFile();
        PrintWriter writer = null;
            try {
                writer = new PrintWriter(fichero);
                writer.print(resultado);
                writer.close();
                JOptionPane.showMessageDialog(this,"Los datos se han guardado correctamente",
                        "Confirm Message",JOptionPane.INFORMATION_MESSAGE);
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this,"No se puede guardar el fichero",
                        "Warning Message",JOptionPane.WARNING_MESSAGE);
            } catch(Exception e){
                JOptionPane.showMessageDialog(this,"No se puede guardar el fichero",
                        "Warning Message",JOptionPane.WARNING_MESSAGE);
            }
    }
}

private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
// TODO add your handling code here:
    String resultado = OntologyTestCase.getMuestra();//GEN-LAST:event_saveMenuItemActionPerformed
    String fichero = "Resultado Tests.doc";
    PrintWriter writer = null;
        try {
            writer = new PrintWriter(MainApplication.getProyecto()+"/"+fichero);
            writer.print(resultado);
            writer.close();
            JOptionPane.showMessageDialog(this,"Los datos se han guardado correctamente",
                    "Confirm Message",JOptionPane.INFORMATION_MESSAGE);
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(this,"No se puede guardar el fichero",
                    "Warning Message",JOptionPane.WARNING_MESSAGE);
        } catch(Exception e){
            JOptionPane.showMessageDialog(this,"No se puede guardar el fichero",
                    "Warning Message",JOptionPane.WARNING_MESSAGE);
        }
}

public javax.swing.JPanel getContentPanelResults() {
    return contentPanelResults;
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentPanelResults;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration//GEN-END:variables

}
